name: Scan with trivy
on: push
jobs:
  scan:
    name: Scan via trivy
    runs-on: ubuntu-latest
    env:
      IMAGE: goodwithtech/dockle # target image name
      FILTER: production    # tags pattern /*production*/
    steps:
      - name: スキャン対象イメージのタグを特定する
        id: target
        run: |
         echo ::set-output name=ver::$(\
          docker run --rm goodwithtech/dockertags -contain $FILTER -limit 1 -format json $IMAGE \
          | jq -r .[0].tags[0]\
         )
      - name: trivyの最新イメージのタグを特定する
        id: trivy
        run: echo ::set-output name=ver::$(docker run --rm goodwithtech/dockertags -limit 1 -format json aquasec/trivy | jq -r .[0].tags[0])
      - name: trivyを利用して対象のイメージをスキャン
        run: docker run aquasec/trivy:${{ steps.target.outputs.ver }}
          --cache-dir /var/lib/trivy --exit-code 1 --no-progress
          $IMAGE:${{ steps.trivy.outputs.ver }}
      - name: trivyのスキャンで異常があればSlackに通知
        if: failure()
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_CHANNEL: channel  # target channel
          SLACK_MESSAGE: 'failed : trivy detects vulnerabilities'
          SLACK_TITLE: trivy-scan-notifier
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}